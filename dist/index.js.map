{"version":3,"sources":["Compiler.js","Lexer.js","Location.js","NodeFilesystem.js","NodePath.js","Template.js","tokens.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Lexer from './Lexer';\r\nimport Template from './Template';\r\nimport tokens from './tokens';\r\n\r\nconst MISSING_FILENAME = '<string>';\r\nconst globalEval = eval;\r\n\r\nclass Compiler {\r\n    constructor(arc, filename, data, child) {\r\n        this.arc = arc;\r\n        this.filename = filename || MISSING_FILENAME;\r\n        this.data = data;\r\n        this.child = child;\r\n    }\r\n\r\n    nameOrExpression(token, defaultIfEmpty) {\r\n        let value = token.value.trim();\r\n        if (value === '') {\r\n            if (defaultIfEmpty !== undefined) {\r\n                value = defaultIfEmpty;\r\n            } else {\r\n                throw new Error(token.begin + ': ' + token.token + ' tag must contain a name or expression.');\r\n            }\r\n        }\r\n        return value.startsWith('(') ? value : JSON.stringify(value);\r\n    }\r\n\r\n    compile(text) {\r\n        const lexer = new Lexer(text, this.filename);\r\n        const buffer = ['with (this._locals) with (this.data) {\\n'];\r\n        for (let token of lexer.lex()) {\r\n            switch (token.token) {\r\n                case tokens.DOCUMENT:\r\n                    buffer.push('this._appendRaw(' + JSON.stringify(token.value) + ');\\n');\r\n                    break;\r\n                case tokens.EXPRESSION:\r\n                    buffer.push('this._append(' + token.value + ');\\n');\r\n                    break;\r\n                case tokens.JAVASCRIPT:\r\n                    buffer.push(token.value + ';\\n');\r\n                    break;\r\n                case tokens.LAYOUT:\r\n                    buffer.push('this._layout = ' + this.nameOrExpression(token) + ';\\n');\r\n                    break;\r\n                case tokens.BLOCK_REFERENCE:\r\n                    buffer.push('this._appendRaw(this.child[' + this.nameOrExpression(token, 'content') + '] || \"\");\\n');\r\n                    break;\r\n                case tokens.BLOCK_NAME:\r\n                    buffer.push('this._currentBlock = ' + this.nameOrExpression(token) + ';\\n');\r\n                    break;\r\n                case tokens.PARTIAL:\r\n                    buffer.push('this.partial = this._locals.partial = yield this._partial(' + this.nameOrExpression(token) + ');\\n');\r\n                    buffer.push('this._appendRaw(this._locals.partial.content);\\n');\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n        buffer.push('}');\r\n        return buffer.join('');\r\n    }\r\n\r\n    parse(text) {\r\n        // As much as I dislike eval, GeneratorFunction doesn't seem to be working yet.\r\n        const func = globalEval('(function *() { ' + this.compile(text) + ' })');\r\n        const template = new Template(this, func, this.data, this.child);\r\n        return template._execute();\r\n    }\r\n\r\n    load() {\r\n        return this.arc.filesystem.readFile(this.filename).then(text => this.parse(text, this.data, this.child));\r\n    }\r\n\r\n    joinedPath(path) {\r\n        if (this.filename === MISSING_FILENAME) {\r\n            return path;\r\n        }\r\n        return this.arc.path.join(this.arc.path.dirname(this.filename), path);\r\n    }\r\n}\r\n\r\nexport default Compiler;","import _ from 'lodash';\r\nimport tokens from './tokens';\r\nimport Location from './Location';\r\n\r\nconst BEGIN_EXPRESSION = '${';\r\nconst END_EXPRESSION = '}';\r\nconst BEGIN_JAVASCRIPT = '<%';\r\nconst END_JAVASCRIPT = '%>';\r\nconst BEGIN_COMMENT = '</*';\r\nconst END_COMMENT = '*/>';\r\nconst BEGIN_BLOCK = '<[';\r\nconst END_BLOCK = ']>';\r\nconst BEGIN_DOCUMENT = '<:';\r\nconst END_DOCUMENT = ':>';\r\nconst BEGIN_BLOCK_REFERENCE = '<*';\r\nconst END_BLOCK_REFERENCE = '*>';\r\nconst BEGIN_LAYOUT = '<!';\r\nconst END_LAYOUT = '!>';\r\nconst BEGIN_PARTIAL = '<(';\r\nconst END_PARTIAL = ')>';\r\n\r\nfunction regex(...values) {\r\n    return new RegExp(values.map(x => _.escapeRegExp(x)).join('|'), 'g');\r\n}\r\n\r\nconst rootContextRegex = regex(BEGIN_EXPRESSION,\r\n    BEGIN_JAVASCRIPT, BEGIN_COMMENT, BEGIN_BLOCK_REFERENCE, BEGIN_PARTIAL, BEGIN_BLOCK, BEGIN_LAYOUT);\r\n\r\nconst documentContextRegex = regex(END_DOCUMENT, BEGIN_EXPRESSION,\r\n    BEGIN_JAVASCRIPT, BEGIN_COMMENT, BEGIN_BLOCK_REFERENCE, BEGIN_PARTIAL);\r\n\r\nconst javascriptContextRegex = regex(END_JAVASCRIPT,\r\n    BEGIN_COMMENT, BEGIN_DOCUMENT);\r\n\r\nconst commentContextRegex = regex(BEGIN_COMMENT, END_COMMENT);\r\n\r\nclass Lexer {\r\n    constructor(text, filename) {\r\n        this.text = text;\r\n        this.index = 0;\r\n        this.lineIndex = 0;\r\n        this.line = 1;\r\n        this.filename = filename;\r\n    }\r\n\r\n    currentLocation() {\r\n        return new Location(this.filename, this.line, this.index - this.lineIndex + 1);\r\n    }\r\n\r\n    moveForward(toIndex, str) {\r\n        str = str || this.text.substring(this.index, toIndex);\r\n        const re = /[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\r\n        let match;\r\n        while (match = re.exec(str)) {\r\n            ++this.line;\r\n            this.lineIndex = re.lastIndex;\r\n        }\r\n        this.index = toIndex;\r\n    }\r\n\r\n    // TODO: Remove token values that aren't actually used (.end, etc).\r\n    getToken(newIndex, token, matchIndex) {\r\n        if (this.index === matchIndex) {\r\n            switch (token) {\r\n                case tokens.DOCUMENT:\r\n                    this.index = newIndex;\r\n                    return null;\r\n                case tokens.BLOCK_REFERENCE:\r\n                    break;\r\n                default:\r\n                    throw new Error(token + ' tag cannot be empty.');\r\n            }\r\n        }\r\n\r\n        const result = {\r\n            token: token,\r\n            value: this.text.substring(this.index, matchIndex),\r\n            begin: this.currentLocation()\r\n        };\r\n        this.moveForward(newIndex, result.value);\r\n        result.end = this.currentLocation();\r\n        return result;\r\n    }\r\n\r\n    *comment() {\r\n        const openLocation = this.currentLocation();\r\n        this.index += BEGIN_COMMENT.length;\r\n        commentContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = commentContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Comment tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_COMMENT);\r\n            }\r\n            this.moveForward(commentContextRegex.lastIndex);\r\n            if (match[0] === END_COMMENT) {\r\n                return;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                commentContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *javascript() {\r\n        const openLocation = this.currentLocation();\r\n        javascriptContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = javascriptContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Javascript tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_JAVASCRIPT);\r\n            }\r\n            yield this.getToken(javascriptContextRegex.lastIndex, tokens.JAVASCRIPT, match.index);\r\n            if (match[0] === END_JAVASCRIPT) {\r\n                return;\r\n            }\r\n            if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                javascriptContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_DOCUMENT) {\r\n                yield* this.document();\r\n                javascriptContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *expression() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_EXPRESSION, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Expression tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_EXPRESSION);\r\n        }\r\n        yield this.getToken(matchIndex + END_EXPRESSION.length, tokens.EXPRESSION, matchIndex);\r\n    }\r\n\r\n    *layout() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_LAYOUT, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Layout tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_LAYOUT);\r\n        }\r\n        yield this.getToken(matchIndex + END_LAYOUT.length, tokens.LAYOUT, matchIndex);\r\n    }\r\n\r\n    *blockReference() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_BLOCK_REFERENCE, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block Reference tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_BLOCK_REFERENCE);\r\n        }\r\n        yield this.getToken(matchIndex + END_BLOCK_REFERENCE.length, tokens.BLOCK_REFERENCE, matchIndex);\r\n    }\r\n\r\n    *partial() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_PARTIAL, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Partial tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_PARTIAL);\r\n        }\r\n        yield this.getToken(matchIndex + END_PARTIAL.length, tokens.PARTIAL, matchIndex);\r\n    }\r\n\r\n    *block() {\r\n        const openLocation = this.currentLocation();\r\n\r\n        let matchIndex = this.text.indexOf(BEGIN_DOCUMENT, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block tag opened at ' + openLocation.locationString() + ' missing opening document tag ' + BEGIN_DOCUMENT);\r\n        }\r\n        yield this.getToken(matchIndex + BEGIN_DOCUMENT.length, tokens.BLOCK_NAME, matchIndex);\r\n\r\n        yield* this.document();\r\n\r\n        matchIndex = this.text.indexOf(END_BLOCK, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_BLOCK);\r\n        }\r\n        this.moveForward(matchIndex + END_BLOCK.length);\r\n    }\r\n\r\n    *document() {\r\n        const openLocation = this.currentLocation();\r\n        documentContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = documentContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Document tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_DOCUMENT);\r\n            }\r\n            yield this.getToken(documentContextRegex.lastIndex, tokens.DOCUMENT, match.index);\r\n            if (match[0] === END_DOCUMENT) {\r\n                return;\r\n            }\r\n            if (match[0] === BEGIN_EXPRESSION) {\r\n                yield* this.expression();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_JAVASCRIPT) {\r\n                yield* this.javascript();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK_REFERENCE) {\r\n                yield* this.blockReference();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_PARTIAL) {\r\n                yield* this.partial();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *root() {\r\n        rootContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = rootContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                yield this.getToken(this.text.length, tokens.DOCUMENT, this.text.length);\r\n                return;\r\n            }\r\n            yield this.getToken(rootContextRegex.lastIndex, tokens.DOCUMENT, match.index);\r\n            if (match[0] === BEGIN_EXPRESSION) {\r\n                yield* this.expression();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_JAVASCRIPT) {\r\n                yield* this.javascript();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK) {\r\n                yield* this.block();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK_REFERENCE) {\r\n                yield* this.blockReference();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_PARTIAL) {\r\n                yield* this.partial();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_LAYOUT) {\r\n                yield* this.layout();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *lex() {\r\n        try {\r\n            for (let token of this.root()) {\r\n                if (token !== null) {\r\n                    yield token;\r\n                }\r\n            }\r\n        } catch (err) {\r\n            err.message = this.currentLocation() + ': ' + err.message;\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lexer;","class Location {\r\n    constructor(filename, line, column) {\r\n        this.filename = filename;\r\n        this.line = line;\r\n        this.column = column;\r\n    }\r\n\r\n    toString() {\r\n        return this.filename + ' ' + this.locationString();\r\n    }\r\n\r\n    locationString() {\r\n        return '(' + this.line + ',' + this.column + ')';\r\n    }\r\n}\r\n\r\nexport default Location;","import fs from 'fs';\r\nimport Promise from 'bluebird';\r\n\r\nconst readFileAsync = Promise.promisify(fs.readFile);\r\n\r\nclass NodeFilesystem {\r\n    readFile(path) {\r\n        return readFileAsync(path, 'utf8');\r\n    }\r\n}\r\n\r\nexport default NodeFilesystem;","import path from 'path';\r\n\r\nclass NodePath {\r\n    dirname(str) {\r\n        return path.dirname(str);\r\n    }\r\n\r\n    join(...str) {\r\n        return path.join(...str);\r\n    }\r\n}\r\n\r\nexport default NodePath;","import _ from 'lodash';\r\nimport Compiler from './Compiler';\r\nimport Promise from 'bluebird';\r\n\r\nclass RawString {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\n/**\r\n * A compiled template.\r\n */\r\nclass Template {\r\n    constructor(compiler, evaluate, data, child, escape) {\r\n        this._ = _;\r\n        this._compiler = compiler;\r\n        this._evaluate = Promise.coroutine(evaluate);\r\n        this.data = data || {};\r\n        this.child = child;\r\n        this._result = {\r\n            content: ''\r\n        };\r\n        this._currentBlock = 'content';\r\n        this._locals = {\r\n            _: this._,\r\n            raw: this.raw\r\n        };\r\n    }\r\n\r\n    _execute() {\r\n        return this._evaluate().then(() => {\r\n            if (this._layout === undefined) {\r\n                return this._result;\r\n            }\r\n            return new Compiler(this._compiler.arc, this._compiler.joinedPath(this._layout), this.data, this._result).load();\r\n        });\r\n    }\r\n\r\n    _appendRaw(str) {\r\n        if (this._result[this._currentBlock] === undefined) {\r\n            this._result[this._currentBlock] = str;\r\n        } else {\r\n            this._result[this._currentBlock] += str;\r\n        }\r\n    }\r\n\r\n    _append(str) {\r\n        if (str instanceof RawString) {\r\n            this._appendRaw(str);\r\n        } else {\r\n            this._appendRaw(this._compiler.arc.escape(str));\r\n        }\r\n    }\r\n\r\n    raw(str) {\r\n        return new RawString(str);\r\n    }\r\n\r\n    _partial(path) {\r\n        return new Compiler(this._compiler.arc, this._compiler.joinedPath(path), this.data).load();\r\n    }\r\n}\r\n\r\nexport default Template;","export default Object.freeze({\r\n    DOCUMENT: 'Document',\r\n    JAVASCRIPT: 'JavaScript',\r\n    EXPRESSION: 'Expression',\r\n    LAYOUT: 'Layout',\r\n    BLOCK_REFERENCE: 'Block Reference',\r\n    PARTIAL: 'Partial',\r\n    BLOCK_NAME: 'Named Block'\r\n});\r\n"],"sourceRoot":"/source/"}