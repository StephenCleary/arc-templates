{"version":3,"sources":["Lexer.js"],"names":[],"mappings":"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","file":"Lexer.js","sourcesContent":["import _ from 'lodash';\r\nimport tokens from './tokens';\r\nimport Location from './Location';\r\n\r\nconst BEGIN_EXPRESSION = '${';\r\nconst END_EXPRESSION = '}';\r\nconst BEGIN_JAVASCRIPT = '<%';\r\nconst END_JAVASCRIPT = '%>';\r\nconst BEGIN_COMMENT = '</*';\r\nconst END_COMMENT = '*/>';\r\nconst BEGIN_BLOCK = '<[';\r\nconst END_BLOCK = ']>';\r\nconst BEGIN_DOCUMENT = '<:';\r\nconst END_DOCUMENT = ':>';\r\nconst BEGIN_BLOCK_REFERENCE = '<*';\r\nconst END_BLOCK_REFERENCE = '*>';\r\nconst BEGIN_LAYOUT = '<!';\r\nconst END_LAYOUT = '!>';\r\nconst BEGIN_PARTIAL = '<(';\r\nconst END_PARTIAL = ')>';\r\n\r\nfunction regex(...values) {\r\n    return new RegExp(values.map(x => _.escapeRegExp(x)).join('|'), 'g');\r\n}\r\n\r\nconst rootContextRegex = regex(BEGIN_EXPRESSION,\r\n    BEGIN_JAVASCRIPT, BEGIN_COMMENT, BEGIN_BLOCK_REFERENCE, BEGIN_PARTIAL, BEGIN_BLOCK, BEGIN_LAYOUT);\r\n\r\nconst documentContextRegex = regex(END_DOCUMENT, BEGIN_EXPRESSION,\r\n    BEGIN_JAVASCRIPT, BEGIN_COMMENT, BEGIN_BLOCK_REFERENCE, BEGIN_PARTIAL);\r\n\r\nconst javascriptContextRegex = regex(END_JAVASCRIPT,\r\n    BEGIN_COMMENT, BEGIN_DOCUMENT);\r\n\r\nconst commentContextRegex = regex(BEGIN_COMMENT, END_COMMENT);\r\n\r\nclass Lexer {\r\n    constructor(text, filename) {\r\n        this.text = text;\r\n        this.index = 0;\r\n        this.lineIndex = 0;\r\n        this.line = 1;\r\n        this.filename = filename;\r\n    }\r\n\r\n    currentLocation() {\r\n        return new Location(this.filename, this.line, this.index - this.lineIndex + 1);\r\n    }\r\n\r\n    moveForward(toIndex, str) {\r\n        str = str || this.text.substring(this.index, toIndex);\r\n        const re = /[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\r\n        let match;\r\n        while (match = re.exec(str)) {\r\n            ++this.line;\r\n            this.lineIndex = re.lastIndex;\r\n        }\r\n        this.index = toIndex;\r\n    }\r\n\r\n    // TODO: Remove token values that aren't actually used (.end, etc).\r\n    getToken(newIndex, token, matchIndex) {\r\n        if (this.index === matchIndex) {\r\n            switch (token) {\r\n                case tokens.DOCUMENT:\r\n                    this.index = newIndex;\r\n                    return null;\r\n                case tokens.BLOCK_REFERENCE:\r\n                    break;\r\n                default:\r\n                    throw new Error(token + ' tag cannot be empty.');\r\n            }\r\n        }\r\n\r\n        const result = {\r\n            token: token,\r\n            value: this.text.substring(this.index, matchIndex),\r\n            begin: this.currentLocation()\r\n        };\r\n        this.moveForward(newIndex, result.value);\r\n        result.end = this.currentLocation();\r\n        return result;\r\n    }\r\n\r\n    *comment() {\r\n        const openLocation = this.currentLocation();\r\n        this.index += BEGIN_COMMENT.length;\r\n        commentContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = commentContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Comment tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_COMMENT);\r\n            }\r\n            this.moveForward(commentContextRegex.lastIndex);\r\n            if (match[0] === END_COMMENT) {\r\n                return;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                commentContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *javascript() {\r\n        const openLocation = this.currentLocation();\r\n        javascriptContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = javascriptContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Javascript tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_JAVASCRIPT);\r\n            }\r\n            yield this.getToken(javascriptContextRegex.lastIndex, tokens.JAVASCRIPT, match.index);\r\n            if (match[0] === END_JAVASCRIPT) {\r\n                return;\r\n            }\r\n            if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                javascriptContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_DOCUMENT) {\r\n                yield* this.document();\r\n                javascriptContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *expression() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_EXPRESSION, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Expression tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_EXPRESSION);\r\n        }\r\n        yield this.getToken(matchIndex + END_EXPRESSION.length, tokens.EXPRESSION, matchIndex);\r\n    }\r\n\r\n    *layout() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_LAYOUT, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Layout tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_LAYOUT);\r\n        }\r\n        yield this.getToken(matchIndex + END_LAYOUT.length, tokens.LAYOUT, matchIndex);\r\n    }\r\n\r\n    *blockReference() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_BLOCK_REFERENCE, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block Reference tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_BLOCK_REFERENCE);\r\n        }\r\n        yield this.getToken(matchIndex + END_BLOCK_REFERENCE.length, tokens.BLOCK_REFERENCE, matchIndex);\r\n    }\r\n\r\n    *partial() {\r\n        const openLocation = this.currentLocation();\r\n        const matchIndex = this.text.indexOf(END_PARTIAL, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Partial tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_PARTIAL);\r\n        }\r\n        yield this.getToken(matchIndex + END_PARTIAL.length, tokens.PARTIAL, matchIndex);\r\n    }\r\n\r\n    *block() {\r\n        const openLocation = this.currentLocation();\r\n\r\n        let matchIndex = this.text.indexOf(BEGIN_DOCUMENT, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block tag opened at ' + openLocation.locationString() + ' missing opening document tag ' + BEGIN_DOCUMENT);\r\n        }\r\n        yield this.getToken(matchIndex + BEGIN_DOCUMENT.length, tokens.BLOCK_NAME, matchIndex);\r\n\r\n        yield* this.document();\r\n\r\n        matchIndex = this.text.indexOf(END_BLOCK, this.index);\r\n        if (matchIndex === -1) {\r\n            throw new Error('Block tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_BLOCK);\r\n        }\r\n        this.moveForward(matchIndex + END_BLOCK.length);\r\n    }\r\n\r\n    *document() {\r\n        const openLocation = this.currentLocation();\r\n        documentContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = documentContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                throw new Error('Document tag opened at ' + openLocation.locationString() + ' missing closing tag ' + END_DOCUMENT);\r\n            }\r\n            yield this.getToken(documentContextRegex.lastIndex, tokens.DOCUMENT, match.index);\r\n            if (match[0] === END_DOCUMENT) {\r\n                return;\r\n            }\r\n            if (match[0] === BEGIN_EXPRESSION) {\r\n                yield* this.expression();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_JAVASCRIPT) {\r\n                yield* this.javascript();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK_REFERENCE) {\r\n                yield* this.blockReference();\r\n                documentContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_PARTIAL) {\r\n                yield* this.partial();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *root() {\r\n        rootContextRegex.lastIndex = this.index;\r\n        while (true) {\r\n            const match = rootContextRegex.exec(this.text);\r\n            if (match === null) {\r\n                yield this.getToken(this.text.length, tokens.DOCUMENT, this.text.length);\r\n                return;\r\n            }\r\n            yield this.getToken(rootContextRegex.lastIndex, tokens.DOCUMENT, match.index);\r\n            if (match[0] === BEGIN_EXPRESSION) {\r\n                yield* this.expression();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_JAVASCRIPT) {\r\n                yield* this.javascript();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_COMMENT) {\r\n                yield* this.comment();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK) {\r\n                yield* this.block();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_BLOCK_REFERENCE) {\r\n                yield* this.blockReference();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_PARTIAL) {\r\n                yield* this.partial();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else if (match[0] === BEGIN_LAYOUT) {\r\n                yield* this.layout();\r\n                rootContextRegex.lastIndex = this.index;\r\n            } else {\r\n                throw new Error(\"Internal error.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    *lex() {\r\n        try {\r\n            for (let token of this.root()) {\r\n                if (token !== null) {\r\n                    yield token;\r\n                }\r\n            }\r\n        } catch (err) {\r\n            err.message = this.currentLocation() + ': ' + err.message;\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lexer;"],"sourceRoot":"/source/"}