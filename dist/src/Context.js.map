{"version":3,"sources":["Context.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;wBACD,YAAY;;;;wBACb,UAAU;;;;AAE9B,MAAM,SAAS,CAAC;AACZ,eAAW,CAAC,KAAK,EAAE;AACf,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;AAED,YAAQ,GAAG;AACP,eAAO,IAAI,CAAC,KAAK,CAAC;KACrB;CACJ;;;;;AAKD,MAAM,OAAO,CAAC;AACV,eAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACtC,YAAI,CAAC,CAAC,mBAAI,CAAC;AACX,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,YAAI,CAAC,SAAS,GAAG,mBAAQ,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC7C,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,YAAI,CAAC,OAAO,GAAG;AACX,aAAC,EAAE,IAAI,CAAC,CAAC;AACT,eAAG,EAAE,IAAI,CAAC,GAAG;SAChB,CAAC;KACL;;AAED,YAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;AAClB,YAAI,CAAC,OAAO,GAAG;AACX,mBAAO,EAAE,EAAE;SACd,CAAC;AACF,YAAI,CAAC,aAAa,GAAG,SAAS,CAAC;AAC/B,YAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAI,KAAK,CAAC;AACzC,eAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,MAAM;AAC/B,gBAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;AAC5B,uBAAO,IAAI,CAAC,OAAO,CAAC;aACvB;AACD,mBAAO,mBAAS,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC3H,CAAC,CAAC;KACN;;AAED,cAAU,CAAC,GAAG,EAAE;AACZ,YAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,SAAS,EAAE;AAChD,gBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC;SAC1C,MAAM;AACH,gBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC;SAC3C;KACJ;;AAED,WAAO,CAAC,GAAG,EAAE;AACT,YAAI,GAAG,YAAY,SAAS,EAAE;AAC1B,gBAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB,MAAM;AACH,gBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnD;KACJ;;AAED,OAAG,CAAC,GAAG,EAAE;AACL,eAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7B;;AAED,YAAQ,CAAC,IAAI,EAAE;AACX,eAAO,mBAAS,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrG;CACJ;;kBAEc,OAAO","file":"Context.js","sourcesContent":["import _ from 'lodash';\r\nimport Template from './Template';\r\nimport Promise from 'bluebird';\r\n\r\nclass RawString {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\n/**\r\n * The context in which a template executes.\r\n */\r\nclass Context {\r\n    constructor(template, evaluate, filename) {\r\n        this._ = _;\r\n        this._template = template;\r\n        this._evaluate = Promise.coroutine(evaluate);\r\n        this._filename = filename;\r\n        this._locals = {\r\n            _: this._,\r\n            raw: this.raw\r\n        };\r\n    }\r\n\r\n    _execute(data, child) {\r\n        this._result = {\r\n            content: ''\r\n        };\r\n        this._currentBlock = 'content';\r\n        this.data = data || {};\r\n        this.child = this._locals.child =  child;\r\n        return this._evaluate().then(() => {\r\n            if (this._layout === undefined) {\r\n                return this._result;\r\n            }\r\n            return Template.fromFile(this._template.arc, this._template.joinedPath(this._layout)).evaluate(this.data, this._result);\r\n        });\r\n    }\r\n\r\n    _appendRaw(str) {\r\n        if (this._result[this._currentBlock] === undefined) {\r\n            this._result[this._currentBlock] = str;\r\n        } else {\r\n            this._result[this._currentBlock] += str;\r\n        }\r\n    }\r\n\r\n    _append(str) {\r\n        if (str instanceof RawString) {\r\n            this._appendRaw(str);\r\n        } else {\r\n            this._appendRaw(this._template.arc.escape(str));\r\n        }\r\n    }\r\n\r\n    raw(str) {\r\n        return new RawString(str);\r\n    }\r\n\r\n    _partial(path) {\r\n        return Template.fromFile(this._template.arc, this._template.joinedPath(path)).evaluate(this.data);\r\n    }\r\n}\r\n\r\nexport default Context;"],"sourceRoot":"/source/"}